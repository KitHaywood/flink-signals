services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"

  postgres:
    image: timescale/timescaledb-ha:pg16
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TIMESCALEDB_TELEMETRY: "off"
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d

  flink-jobmanager:
    build:
      context: ./docker/flink
      dockerfile: Dockerfile
    container_name: flink-jobmanager
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
        parallelism.default: ${FLINK_PARALLELISM:-2}
      - EXECUTION_MODE=${EXECUTION_MODE:-paper}
      - STRATEGY_RUN_ID=${STRATEGY_RUN_ID}
    ports:
      - "8081:8081"
    volumes:
      - ./flink_jobs:/opt/flink/usrlib
    depends_on:
      - kafka
      - postgres

  flink-taskmanager:
    build:
      context: ./docker/flink
      dockerfile: Dockerfile
    container_name: flink-taskmanager
    command: taskmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
        taskmanager.numberOfTaskSlots: 2
      - EXECUTION_MODE=${EXECUTION_MODE:-paper}
      - STRATEGY_RUN_ID=${STRATEGY_RUN_ID}
    volumes:
      - ./flink_jobs:/opt/flink/usrlib
    depends_on:
      - flink-jobmanager

  producer:
    build:
      context: ./producer
    container_name: coinbase-producer
    command: python -m producer.run
    environment:
      KAFKA_BROKER: kafka:9092
      COINBASE_PRODUCT_IDS: ${COINBASE_PRODUCT_IDS}
      COINBASE_WS_URL: ${COINBASE_WS_URL}
      KAFKA_TOPIC_PRICES_RAW: ${KAFKA_TOPIC_PRICES_RAW}
    depends_on:
      - kafka

  grafana-flink:
    image: grafana/grafana:10.4.2
    container_name: grafana-flink
    ports:
      - "3100:3000"
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - grafana_storage:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/etc/grafana/dashboards
    depends_on:
      - postgres

volumes:
  postgres_data:
  grafana_storage:
